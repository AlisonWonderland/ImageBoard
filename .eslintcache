[{"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/index.js":"1","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/reportWebVitals.js":"2","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/App.js":"3","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/services/image.js":"4","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Posts.js":"5","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Navbar.js":"6","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/ThreadForm.js":"7","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Threads.js":"8","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/services/post.js":"9","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Thread.js":"10","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/ReplyForm.js":"11","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Post.js":"12","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/hooks/windowDimension.js":"13"},{"size":500,"mtime":1609723768151,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1609723768202,"results":"16","hashOfConfig":"15"},{"size":7536,"mtime":1611364200533,"results":"17","hashOfConfig":"15"},{"size":553,"mtime":1610933977645,"results":"18","hashOfConfig":"15"},{"size":235,"mtime":1612412934148,"results":"19","hashOfConfig":"15"},{"size":870,"mtime":1610428076745,"results":"20","hashOfConfig":"15"},{"size":2325,"mtime":1612415906702,"results":"21","hashOfConfig":"15"},{"size":501,"mtime":1611204526758,"results":"22","hashOfConfig":"15"},{"size":553,"mtime":1611119168295,"results":"23","hashOfConfig":"15"},{"size":5610,"mtime":1612415295227,"results":"24","hashOfConfig":"15"},{"size":2083,"mtime":1612416111654,"results":"25","hashOfConfig":"15"},{"size":4057,"mtime":1612415862948,"results":"26","hashOfConfig":"15"},{"size":674,"mtime":1611639559106,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16rrrcp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/index.js",[],["57","58"],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/reportWebVitals.js",[],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/App.js",["59","60"],"import React, { useState } from 'react'\nimport imageService from './services/image'\nimport Posts from './components/Posts'\nimport Navbar from './components/Navbar'\nimport ThreadForm from './components/ThreadForm'\nimport Threads from './components/Threads'\nimport ReplyForm from './components/ReplyForm'\nimport './App.css';\nimport axios from 'axios'\n\n// todo\n/// clean code then style\n// try out imgur api\n// get image size https://stackoverflow.com/questions/12539918/get-the-width-and-height-of-an-image-in-node-js\n\n// create thread button and form\n// alternate between thread view and catalog view\n// change posts into components\n\n// LETS USE REACT ROUTER/ multi page setup\n\n\n// finish thread view first, infinite replies for know on thread view.\n// do this to keep track of replies, threads, etc\n// one page for gallery, first\n// one home page showing all threads\n// threads are just a picture/media and need text\n// going to have to ccheck if an image is attached\n\n\n// resources \n// https://web.dev/browser-level-image-lazy-loading/\n// https://css-tricks.com/the-complete-guide-to-lazy-loading-images/\n// https://css-tricks.com/preventing-content-reflow-from-lazy-loaded-images/\n// https://developer.mozilla.org/en-US/docs/Web/Performance/Critical_rendering_path\n// https://stackoverflow.com/questions/13079742/how-to-generate-video-thumbnail-in-node-js\n// https://code.tutsplus.com/tutorials/how-to-create-a-resumable-video-uploader-in-nodejs--net-25445\n\n// theme inspiration\n// https://www.toptal.com/designers/htmlarrows/math/greater-than-sign/\n\n// features\n// go to top\n// bottom\n// let op's change the threads theme\n// create a preview of the thread as they create it.\n\n\nfunction App() {\n    const [ file, setFile ] = useState(null)\n    const [ posts, setPosts ] = useState([])\n    const [ threads, setThreads ] = useState([])\n    \n    console.log('file', file)\n    console.log('threads', threads)\n    // console.log('urls', posts)\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n\n        imageService.upload(formData)\n            .then(response => {\n                // console.log(response)\n                // console.log(response.data.url)\n                // console.log(response.data.filetype)\n                // this will concat url in final\n                setPosts(posts.concat({ ...response.data, url: 'test_pics/' + response.data.url}))\n                console.log('posts updated after upload')\n                // setFile(null)\n            })\n            .catch((error) => {\n                alert('Upload error occured')\n                console.log('====error:', error)\n            });\n\n        // console.log(formData.get('file'))\n        // const config = {\n        //     headers: {\n        //         'content-type': 'multipart/form-data'\n        //     }\n        // };\n\n        // axios.post('http://localhost:3001/upload',formData, config)\n        //     .then((response) => {\n        //         // console.log(response)\n        //         // console.log(response.data.url)\n        //         // console.log(response.data.filetype)\n        //         // this will concat url in final\n        //         setPosts(posts.concat({ ...response.data, url: 'test_pics/' + response.data.url}))\n        //         setFile(null)\n        //     }).catch((error) => {\n        //         console.log('====error:', error)\n        // });\n    }\n\n    const onChange = (e) => {\n        console.log('changed called')\n        setFile(e.target.files[0]);\n    }\n\n    // have boolean to switch between thread view and catalog view\n\n    return (\n        <>\n            <Navbar />\n            <ThreadForm threads={threads} setThreads={setThreads}>Create Thread</ThreadForm>\n            <Threads threads={threads}></Threads>\n\n            <div className=\"thread\"></div>\n            <form onSubmit={onFormSubmit}>\n                <h1>File Upload</h1>\n                <input type=\"file\" name=\"file\" onChange={onChange} />\n                <button type=\"submit\">Upload</button>\n            </form>\n            <img src=\"test_pics/0.jpg\" alt=\"Girl in a jacket\" width=\"300\" height=\"500\" />\n            <Posts posts={posts} />\n            \n            <div className=\"thread\">\n                <div className=\"postContainer opContainer\">\n                    <div className=\"post op\">\n                        <div className=\"file\">\n                            <div className=\"fileInfo\">\n                                File: <a href=\"test_pics/1.jpg\" target=\"_blank\">1.jpg</a> (300x100)\n                            </div>\n                            <a href=\"test_pics/0.jpg\">\n                                <img className=\"thumbnail\" src=\"test_pics/0thumb.jpg\" alt=\"\" />    \n                            </a>\n                        </div>\n                        <div className=\"postInfo\">\n                            <strong>KPOP GENERAL</strong> Anonymous 01/14/21(Thu)21:32:56 No.100922414 [<a href=\"posturl\">Reply</a>] &gt; <a href=\"#reply1\">&gt;&gt;010010101</a>\n                        </div>\n                        <blockquote className=\"postMessage\" cite=\"https://www.huxley.net/bnw/four.html\">\n                            Words can be like X-rays, if you use them properly—they’ll go through anything. You read and you’re pierced.\n                            blah blah\n                        </blockquote>\n                    </div>\n                </div>\n                \n                <div id=\"reply1\" className=\"postContainer replyContainer\">\n                    <div className=\"sideArrows\">&gt;</div>\n                    <div className=\"post reply\">\n                        <div className=\"postInfo\">\n                            <span className=\"nameBlock\">Anonymous</span> 01/15/21(Fri)10:37:30 No.100933414 [<a href=\"posturl\">Reply</a>] &gt; sjafjlalk\n                        </div>\n                        <div className=\"file\">\n                            <div className=\"fileInfo\">\n                                File: <a href=\"test_pics/1.jpg\" target=\"_blank\">1.jpg</a> (File data)\n                            </div>\n                            <a href=\"test_pics/0.jpg\">\n                                <img className=\"thumbnail\" src=\"test_pics/0thumb.jpg\" alt=\"\"/>    \n                            </a>\n                        </div>\n                        <blockquote className=\"postMessage\" cite=\"https://www.huxley.net/bnw/four.html\">\n                            what a banger! cmon chat what are you doing ijwieojiojoijjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\n                            wjefjo\n                            what a banger! cmon chat what are you doing what a banger! cmon chat what are you doing\n                        </blockquote>\n                    </div>\n                </div>\n\n                <div id=\"reply2\" className=\"postContainer replyContainer\">\n                    <div className=\"sideArrows\">&gt;&gt;</div>\n                    <div className=\"post reply\">\n                        <div className=\"postInfo\">\n                            Anonymous 01/15/21(Fri)10:37:30 No.100933414 [<a href=\"posturl\">Reply</a>] &gt;\n                        </div>\n                        <blockquote className=\"postMessage\" cite=\"https://www.huxley.net/bnw/four.html\">\n                            what a banger! cmon chat what are you doing ijwieojiojoi\n                        </blockquote>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default App;","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/services/image.js",["61"],"import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/upload'\r\n\r\nconst upload = (formData) => {\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    }\r\n    // for (var p of formData) {\r\n    //     console.log('data', p);\r\n    // }\r\n    return axios.post(baseUrl, formData, config)\r\n            .then((response) => {\r\n                return response\r\n            }).catch((error) => {\r\n                console.log('error occured', error)\r\n            });\r\n}\r\n\r\nexport default { upload }","/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Posts.js",[],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Navbar.js",[],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/ThreadForm.js",[],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Threads.js",[],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/services/post.js",["62"],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Thread.js",["63","64"],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/ReplyForm.js",[],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/Post.js",["65"],"/mnt/d/Users/dimitri/Desktop/react/photo_board/src/components/hooks/windowDimension.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":21,"column":1,"nodeType":"77","endLine":21,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":21,"column":1,"nodeType":"77","endLine":21,"endColumn":26},{"ruleId":"70","severity":1,"message":"78","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"79","line":39,"column":13,"nodeType":"72","messageId":"73","endLine":39,"endColumn":25},{"ruleId":"70","severity":1,"message":"79","line":8,"column":13,"nodeType":"72","messageId":"73","endLine":8,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'ReplyForm' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'windowHeight' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]